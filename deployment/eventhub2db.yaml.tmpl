---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventhub2db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: eventhub2db
  template:
    metadata:
      labels:
        app: eventhub2db
    spec:
      volumes:
        - configMap:
            name: grafana-config
          name: grafana-config
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
        - name: eventhub2db
          image: TEMPLATE_VAR_EVENTHUB2DB_IMAGE
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          env:
            - name: EVENTHUB_CONNECTIONSTRING
              valueFrom:
                secretKeyRef:
                  name: connectionstring
                  key: eventhubConn
        - name: timescaledb
          image: timescale/timescaledb:2.1.0-pg13
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: "password"
        - name: grafana
          image: harbor.ci4rail.com/ci4rail/grafana:7.4.3
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 3000
          env:
            - name: GF_LOG_LEVEL
              value: "info"
            - name: GF_ROUTER_LOGGING
              value: "true"
            - name: GF_SERVER_ROOT_URL
              value: "https://TEMPLATE_VAR_TENANT.grafana.edgefarm.io/"
            - name: GF_SERVER_DOMAIN
              value: "edgefarm.io"
            - name: GF_SERVER_SERVE_FROM_SUB_PATH
              value: "true"
            - name: GF_AUTH_GENERIC_OAUTH_ENABLED
              value: "true"
            - name: GF_AUTH_GENERIC_OAUTH_TEAM_IDS
              value: ""
            - name: GF_AUTH_GENERIC_OAUTH_ALLOWED_ORGANIZATIONS
              value: ""
            - name: GF_AUTH_GENERIC_OAUTH_NAME
              value: "Auth0"
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
              value: TEMPLATE_VAR_OAUTH_CLIENT_ID
            - name: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
              value: TEMPLATE_VAR_OAUTH_CLIENT_SECRET
            - name: GF_AUTH_GENERIC_OAUTH_SCOPES
              value: "openid profile email"
            - name: GF_AUTH_GENERIC_OAUTH_AUTH_URL
              value: "https://egefarm-test-d628e517-3960-4790-8d67-ae65e4dc2891.eu.auth0.com/authorize"
            - name: GF_AUTH_GENERIC_OAUTH_TOKEN_URL
              value: "https://egefarm-test-d628e517-3960-4790-8d67-ae65e4dc2891.eu.auth0.com/oauth/token"
            - name: GF_AUTH_GENERIC_OAUTH_API_URL
              value: "https://egefarm-test-d628e517-3960-4790-8d67-ae65e4dc2891.eu.auth0.com/userinfo"
            - name: GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH
              value: contains("http://tenants"[*], 'TEMPLATE_VAR_TENANT') && 'Admin'
          volumeMounts:
            - mountPath: /etc/grafana/provisioning/datasources/timescaledb-datasource.yml
              name: grafana-config
              readOnly: true
              subPath: timescaledb-datasource.yml
            - mountPath: /etc/grafana/provisioning/dashboards/grafana-dashboard-provider.yml
              name: grafana-config
              readOnly: true
              subPath: grafana-dashboard-provider.yml
            - mountPath: /var/lib/grafana/dashboards/gps-demo-dashboard.json
              name: grafana-config
              readOnly: true
              subPath: gps-demo-dashboard.json
      imagePullSecrets:
        - name: ci4rail-harbor-secret
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  type: ClusterIP
  ports:
    - port: 3000
  selector:
    app: eventhub2db
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: grafana-tls-secret
spec:
  secretName: grafana-tls-secret
  dnsNames:
    - TEMPLATE_VAR_GRAFANA.edgefarm.io
  commonName: TEMPLATE_VAR_GRAFANA.edgefarm.io
  issuerRef:
    name: letsencrypt-staging
    kind: ClusterIssuer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grafana-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-staging
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  tls:
    - hosts:
        - TEMPLATE_VAR_GRAFANA.edgefarm.io
      secretName: grafana-tls-secret
  rules:
    - host: TEMPLATE_VAR_GRAFANA.edgefarm.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana-service
                port:
                  number: 3000
